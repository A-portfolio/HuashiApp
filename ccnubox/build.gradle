
//七牛云上传gradle脚本
/*plugins {
    id 'com.ppdai.qiniu.upload' version '0.0.4'
}

apply from: 'qiniu.gradle'

uploadConfig {
    if(keystoreProperties!=null) {
        secretKey = keystoreProperties['secretKey']
        accessKey = keystoreProperties['accessKey']
    }

}
*/
println("ccnubox/build.gradle")
apply plugin: 'com.android.application'
apply from :'tinker.gradle'

def keystorePropertiesFile = rootProject.file("keystore.properties")
// Initialize a new Properties() object called keystoreProperties.
def keystoreProperties = new Properties()
// Load your keystore.properties file into the keystoreProperties object.
if (keystorePropertiesFile.isFile())
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
else
    keystoreProperties=null


android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion

    defaultConfig {
        applicationId "net.muxi.huashiapp"
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName

        multiDexEnabled true

        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath true
            }
        }
        ndk {
            abiFilters "armeabi-v7a", "x86"
        }

//        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    dexOptions {
        jumboMode = true
    }

    signingConfigs {
        release {
            if(keystoreProperties!=null) {
                keyAlias keystoreProperties['keyAlias']
                keyPassword keystoreProperties['keyPassword']
                storeFile file(keystoreProperties['storeFile'])
                storePassword keystoreProperties['storePassword']
            }
        }
    }


    buildTypes {
        release {
            buildConfigField "boolean", "LOG_DEBUG", "false"
            //Zipalign优化
            zipAlignEnabled true
            // 移除无用的resource文件
            shrinkResources true
            //混淆
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            minifyEnabled false
        }
    }

    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }
}

//library default is release
def currentBuildType = "release"

gradle.startParameter.taskNames.each({
    String taskNameL = it.toLowerCase()
    if(taskNameL.contains("assemble") || taskNameL.contains("install")) {
        if(taskNameL.contains("debug")) {
            currentBuildType = "debug"
            return
        } else if(taskNameL.contains("release")) {
            currentBuildType = "release"
            return
        }
    }
})

dependencies {
    implementation project(':app')
}

this.gradle.buildFinished(){
    android.applicationVariants.all{variant->
        variant.getPackageApplicationProvider().get().outputs.files.each{ file->
            println("apk路径："+file)
        }

    }

}