apply plugin: 'com.android.application'
apply plugin: 'com.antfortune.freeline'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'com.tencent.tinker.patch'
apply plugin: 'tinkerpatch-support'

import java.text.SimpleDateFormat

def keystorePropertiesFile = rootProject.file("keystore.properties")

// Initialize a new Properties() object called keystoreProperties.
def keystoreProperties = new Properties()

// Load your keystore.properties file into the keystoreProperties object.
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

def versionMajor = 2
def versionMinor = 1
def versionBuild = 8

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.1"

    dexOptions {
        jumboMode = true
    }

    signingConfigs {
        release {
            keyAlias 'huashiapp'
            keyPassword 'ccnumuxi'
            storeFile file('HuashiApp.jks')
            storePassword 'ccnumuxi'
        }
    }

    defaultConfig {
        applicationId "net.muxi.huashiapp"
        minSdkVersion 16
        targetSdkVersion 25
        versionCode versionMajor * 10000 + versionMinor * 100 + versionBuild
        versionName = "${versionMajor}.${versionMinor}.${versionBuild}"

        multiDexEnabled true

//        buildConfigField "boolean", "TINKER_ENABLE", "${tinkerpatchSupport.tinkerEnable}"
    }

    buildTypes {
        release {
            buildConfigField "boolean", "LOG_DEBUG", "false"
            //Zipalign优化
            zipAlignEnabled true
            // 移除无用的resource文件
            shrinkResources true
            //混淆
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
//            signingConfig signingConfigs.release
            minifyEnabled false
        }
    }

    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }

}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile 'com.android.support:appcompat-v7:25.2.0'
    compile 'com.squareup.retrofit2:retrofit:2.0.2'
    compile 'com.android.support:design:25.2.0'
    compile 'io.reactivex:rxjava:1.1.0'
    compile 'com.jakewharton:butterknife:8.5.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.5.1'
    compile 'com.android.support:cardview-v7:25.2.0'
    compile 'com.android.support:recyclerview-v7:25.2.0'
    compile 'com.squareup.retrofit2:converter-gson:2.0.2'
    compile 'com.squareup.retrofit2:adapter-rxjava:2.0.2'
    compile 'com.squareup.okhttp3:logging-interceptor:3.3.1'
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile 'io.reactivex:rxandroid:1.1.0'
    compile 'com.facebook.fresco:fresco:1.1.0'
    compile 'com.facebook.fresco:animated-gif:1.1.0'
    compile 'com.daimajia.numberprogressbar:library:1.2@aar'
    compile 'com.tencent.bugly:crashreport:2.2.0'
    compile 'me.biubiubiu.justifytext:library:1.1'
    compile 'com.github.fengminchao:MultiStatusView:0.6'
    compile 'com.zhy:base-rvadapter:3.0.3'
    compile 'com.github.fengminchao:CardBanner:1.0'
    compile 'com.tinkerpatch.sdk:tinkerpatch-android-sdk:1.1.4'
    compile 'com.tencent.tinker:tinker-android-anno:1.7.7'
    compile 'com.android.support:multidex:1.0.1'
    compile 'com.github.Muxi-Studio:YAJB-Android:1.0'
    //    compile 'com.jakewharton.picasso:picasso2-okhttp3-downloader:1.1.0'
    testCompile 'org.robolectric:shadows-support-v4:3.3'
    testCompile 'org.robolectric:robolectric:3.3.1'
    testCompile 'org.khronos:opengl-api:gl1.1-android-2.1_r1'
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:2.7.14'
    compile 'com.umeng.sdk:common:latest.integration'
    compile 'com.umeng.sdk:analytics:latest.integration'
}

def buildTime() {
    def df = new SimpleDateFormat("yyyy-MM-dd-HH-mm-ss")
    df.setTimeZone(TimeZone.getDefault())
    return df.format(new Date())
}

def bakPath = file("${buildDir}/bakApk/")
def baseInfo = "app-${versionMajor}.${versionMinor}.${versionBuild}-" + buildTime()
def variantName = "release"


tinkerpatchSupport {
    tinkerEnable = true
    reflectApplication = true

    autoBackupApkPath = "${bakPath}"

    appKey = "15546ae78491131f"

    appVersion = "${versionMajor}.${versionMinor}.${versionBuild}"

    def pathPrefix = "${bakPath}/${baseInfo}/${variantName}/"
    def name = "${project.name}-${variantName}"

    baseApkFile = "${pathPrefix}/${name}.apk"
    baseProguardMappingFile = "${pathPrefix}/${name}-mapping.txt"
    baseResourceRFile = "${pathPrefix}/${name}-R.txt"

}


tinkerPatch {
    ignoreWarning = false
    useSign = true
    dex {
        dexMode = "jar"
        pattern = ["classes*.dex"]
        loader = []
    }
    lib {
        pattern = ["lib/*/*.so"]
    }

    res {
        pattern = ["res/*", "r/*", "assets/*", "resources.arsc", "AndroidManifest.xml"]
        ignoreChange = []
        largeModSize = 100
    }

    packageConfig {
    }

    sevenZip {
        zipArtifact = "com.tencent.mm:SevenZip:1.1.10"
    }
    buildConfig {
        keepDexApply = false
    }
}

